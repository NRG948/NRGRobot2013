// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc948.NRGRobot2013.subsystems;

import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc948.NRGRobot2013.RobotMap;
import org.usfirst.frc948.NRGRobot2013.utilities.Debug;

/**
 * @author Patrick & Charles
 */
public class DiscMagazine extends Subsystem {

    private Relay magPiston = RobotMap.magPiston;
    
    private static final double THRESHOLD = 1.0;  // 0.5 when no frisbee, 1.5 when one frisbee in
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    public void openPiston() {
        if (magPiston.get() == Relay.Value.kOff) {
            Debug.println("[DiscMagazine] opening with RPM=" + RobotMap.shooterQuadrature.averageRPM());
        }
        
        magPiston.set(Relay.Value.kReverse);
    }

    public void closePiston() {
        magPiston.set(Relay.Value.kOff);
    }

    public boolean frisbeeLoaded() {
        return RobotMap.IRSensor.getAverageVoltage() > THRESHOLD;
    }
    
}
