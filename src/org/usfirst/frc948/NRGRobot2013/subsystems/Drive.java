// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc948.NRGRobot2013.subsystems;

import org.usfirst.frc948.NRGRobot2013.RobotMap;
import org.usfirst.frc948.NRGRobot2013.OI;
import org.usfirst.frc948.NRGRobot2013.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.Encoder.PIDSourceParameter;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *@author Charles, Jared
 */
public class Drive extends Subsystem 
{
    //left and right motors
    public static final int MOTOR_LEFT1_CHANNEL = 1;
    public static final int MOTOR_LEFT2_CHANNEL = 2;
    public static final int MOTOR_RIGHT1_CHANNEL = 3;
    public static final int MOTOR_RIGHT2_CHANNEL = 4;
    
    //jaguars:
    private Jaguar LEFT1_MOTOR;
    private Jaguar LEFT2_MOTOR; 
    private Jaguar RIGHT1_MOTOR;
    private Jaguar RIGHT2_MOTOR;
    //joysticks
    private OI leftJoystick;
    private OI rightJoystick;
    
    public void Drive() 
    {
        LEFT1_MOTOR = new Jaguar(MOTOR_LEFT1_CHANNEL);
        LEFT2_MOTOR = new Jaguar(MOTOR_LEFT2_CHANNEL);
        
        RIGHT1_MOTOR = new Jaguar(MOTOR_RIGHT1_CHANNEL);
        RIGHT2_MOTOR = new Jaguar(MOTOR_RIGHT2_CHANNEL);
    }
    
    public void tankDrive(Joystick leftJoystick, Joystick rightJoystick) 
    {
        LEFT1_MOTOR.set(leftJoystick.getY()*-1);
        LEFT2_MOTOR.set(leftJoystick.getY()*-1);
        
        RIGHT1_MOTOR.set(rightJoystick.getY()*-1);
        RIGHT2_MOTOR.set(rightJoystick.getY()*-1);
    }
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftMotor = RobotMap.driveleftMotor;
    SpeedController rightMotor = RobotMap.driverightMotor;
    Encoder leftQuadrature = RobotMap.driveleftQuadrature;
    Encoder rightQuadrature = RobotMap.driverightQuadrature;
    Gyro gyro = RobotMap.drivegyro;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}

